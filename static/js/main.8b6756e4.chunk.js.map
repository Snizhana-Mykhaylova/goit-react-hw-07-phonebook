{"version":3,"sources":["components/Contacts/contacts.module.css","components/Filter/filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-operations.js","components/Form/Form.js","redux/phonebook/phonebook-selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Form/form.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","filterChange","contactsReducer","createReducer","_","payload","state","filter","id","loading","error","filterReducer","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebook","phoneReducer","axios","defaults","baseURL","name","number","dispatch","getState","contact","normalizedName","toLowerCase","find","alert","post","then","data","catch","err","message","delete","get","Form","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","this","className","styles","form","input","type","pattern","title","required","onChange","button","Component","connect","ContactOperations","getLoading","getError","getFilter","getFilteredContacts","createSelector","normalizedFilter","includes","phoneFormatter","require","selectors","onDeleteContact","operations","map","contactItem","format","onClick","Filter","actions","defaultProps","App","fetchContact","isLoading","isError","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b6756e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__3BpPU\",\"number\":\"contacts_number__17XBp\",\"button\":\"contacts_button__2AQTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__ySgjp\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\n\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\n\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\n\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\n\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const filterChange = createAction('contacts/filterChange');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  filterChange,\r\n} from './phonebook-actions.js';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(false, {\r\n  [addContactRequest]: () => false,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => true,\r\n  [deleteContactRequest]: () => false,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => true,\r\n  [fetchContactRequest]: () => false,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => true,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport phoneReducer from './phonebook/phonebook-reducer.js';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phoneReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './phonebook-actions.js';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst addContact = (name, number) => (dispatch, getState) => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n  const state = getState();\r\n  const contacts = state.phonebook.contacts;\r\n  const normalizedName = name.toLowerCase();\r\n  if (contacts.find(contact => contact.name.toLowerCase() === normalizedName)) {\r\n    alert(`${name} is already in contacts`);\r\n    dispatch(fetchContactSuccess());\r\n    return;\r\n  }\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(err => dispatch(addContactError(err.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(err => dispatch(deleteContactError(err.message)));\r\n};\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch(err => dispatch(fetchContactError(err.message)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nimport ContactOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const number = this.state.number;\r\n    const name = this.state.name;\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.input}>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.input}>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(ContactOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.phonebook.loading;\r\nexport const getError = state => state.phonebook.error;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getContacts = state => state.phonebook.contacts;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styles from './contacts.module.css';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport * as selectors from '../../redux/phonebook/phonebook-selectors';\r\n\r\nconst phoneFormatter = require('phone-formatter');\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li className={styles.contactItem} key={contact.id}>\r\n          {contact.name}:\r\n          <span className={styles.number}>\r\n            {phoneFormatter.format(contact.number, 'NNN-NN-NN')}\r\n          </span>\r\n          <button\r\n            className={styles.button}\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: selectors.getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport * as selectors from '../../redux/phonebook/phonebook-selectors';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\nconst mapStateToProps = state => ({ value: selectors.getFilter(state) });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.filterChange(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport operations from './redux/phonebook/phonebook-operations';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport * as selectors from './redux/phonebook/phonebook-selectors';\n\nimport './common.css';\n// import { render } from 'react-dom';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContact();\n  }\n\n  render() {\n    return (\n      <div className=\"containerApp\">\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n        {this.props.isLoading && <h2>Loading ... </h2>}\n        {this.props.isError && <h2>Something goes wrong :( </h2>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: selectors.getLoading(state),\n  isError: selectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContact: () => dispatch(operations.fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__36URg\",\"input\":\"form_input__1fbpu\",\"button\":\"form_button__29U4I\"};"],"sourceRoot":""}