{"version":3,"sources":["components/Contacts/contacts.module.css","components/Filter/filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-operations.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Form/form.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","filterChange","deleteContact","contactsReducer","createReducer","state","payload","filter","id","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebook","phoneReducer","axios","defaults","baseURL","name","number","dispatch","contact","post","then","data","catch","err","Form","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","formReset","this","className","styles","form","input","type","pattern","title","required","onChange","button","Component","connect","ContactOperations","phoneFormatter","require","allContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","onDeleteContact","actions","map","contactItem","format","onClick","Filter","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,8BAA8B,OAAS,yBAAyB,OAAS,2B,mBCAzGD,EAAOC,QAAU,CAAC,MAAQ,wB,6ICCbC,EAAoBC,YAAa,8BAEjCC,EAAoBD,YAAa,8BAEjCE,EAAkBF,YAAa,4BAE/BG,EAAeH,YAAa,yBAE5BI,EAAgBJ,YAAa,0BCApCK,EAAkBC,YAAc,IAAD,mBAClCL,GAAoB,SAACM,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAM7B,MAAM,GAAN,mBAAWD,GAAX,CAAkBC,OAPe,cASlCJ,GAAgB,SAACG,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACfD,EAAME,QAAO,qBAAGC,KAAgBF,QAVC,IAa/BG,EAAgBL,YAAc,GAAD,eAChCH,GAAe,SAACS,EAAD,YAAMJ,YAGTK,cAAgB,CAC7BC,SAAUT,EACVI,OAAQE,ICjBJI,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAejDC,EAVDC,YAAe,CAC3BC,QAAS,CACPC,UAAWC,GAEbd,e,iECfFe,IAAMC,SAASC,QAAU,wBAElB,IAUQ,EAVW,SAACC,EAAMC,GAAP,OAAkB,SAAAC,GAC1C,IAAMC,EAAU,CAAEH,OAAMC,UACxBC,EAASpC,KACT+B,IACGO,KAAK,YAAaD,GAClBE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASlC,EAAkBsC,OAC9CC,OAAM,SAAAC,GAAG,OAAIN,EAASjC,EAAgBuC,S,OCVrCC,E,4MACJnC,MAAQ,CACN0B,KAAM,GACNC,OAAQ,I,EAGVS,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAME,OAAOb,KAAOW,EAAME,OAAOC,S,EAGpDC,aAAe,SAAAJ,GACbA,EAAMK,iBACN,IAAMf,EAAS,EAAK3B,MAAM2B,OACpBD,EAAO,EAAK1B,MAAM0B,KACxB,EAAKiB,MAAMC,SAASlB,EAAMC,GAE1B,EAAKkB,a,EAGPA,UAAY,WACV,EAAKP,SAAS,CACZZ,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMiB,SAAUE,KAAKL,aAAcM,UAAWC,IAAOC,KAArD,UACE,wBAAOF,UAAWC,IAAOE,MAAzB,iBAEE,uBACEV,MAAOM,KAAK9C,MAAM0B,KAClByB,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUT,KAAKV,kBAGnB,wBAAOW,UAAWC,IAAOE,MAAzB,mBAEE,uBACEV,MAAOM,KAAK9C,MAAM2B,OAClBwB,KAAK,MACLzB,KAAK,SACL0B,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAAUT,KAAKV,kBAGnB,wBAAQW,UAAWC,IAAOQ,OAA1B,gC,GArDWC,aAgEJC,cAAQ,MALI,SAAA9B,GAAQ,MAAK,CACtCgB,SAAU,SAAClB,EAAMC,GAAP,OACRC,EAAS+B,EAA6BjC,EAAMC,QAGjC+B,CAAkCvB,G,iBClE3CyB,EAAiBC,EAAQ,IA0ChBH,eAXS,SAAA1D,GACtB,MAA6BA,EAAMqB,UAGnC,MAAO,CAAEd,SAZiB,SAACuD,EAAa5D,GACxC,IAAM6D,EAAmB7D,EAAO8D,cAEhC,OAAOF,EAAY5D,QAAO,qBAAGwB,KACtBsC,cAAcC,SAASF,MAMLG,CADzB,EAAQ3D,SAAR,EAAkBL,YAMO,SAAA0B,GAAQ,MAAK,CACtCuC,gBAAiB,SAAAhE,GAAE,OAAIyB,EAASwC,EAAsBjE,QAGzCuD,EAxCE,SAAC,GAAmC,IAAjCnD,EAAgC,EAAhCA,SAAU4D,EAAsB,EAAtBA,gBAC5B,OACE,6BACG5D,EAAS8D,KAAI,SAAAxC,GAAO,OACnB,qBAAIkB,UAAWC,IAAOsB,YAAtB,UACGzC,EAAQH,KADX,IAEE,sBAAMqB,UAAWC,IAAOrB,OAAxB,SACGiC,EAAeW,OAAO1C,EAAQF,OAAQ,eAEzC,wBACEoB,UAAWC,IAAOQ,OAClBgB,QAAS,kBAAML,EAAgBtC,EAAQ1B,KAFzC,sBALsC0B,EAAQ1B,Y,iBCLlDsE,EAAS,SAAC,GAAD,IAAGjC,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACb,0DAEE,uBACER,UAAWC,IAAOE,MAClBC,KAAK,OACLX,MAAOA,EACPe,SAAUA,QAYDG,eARS,SAAA1D,GACtB,MAAO,CAAEwC,MAAOxC,EAAMqB,UAAUnB,WAGP,SAAA0B,GAAQ,MAAK,CACtC2B,SAAU,SAAAlB,GAAK,OAAIT,EAASwC,EAAqB/B,EAAME,OAAOC,YAGjDkB,CAA6Ce,GAE5DA,EAAOC,aAAe,CACpBlC,MAAO,I,UCXMmC,EAVH,kBACV,sBAAK5B,UAAU,eAAf,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLJ6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU5D,MAAOA,EAAjB,SAEE,cAAC,EAAD,QAIJ6D,SAASC,eAAe,U,kBCf1B1F,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,wB","file":"static/js/main.93937d3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__3BpPU\",\"number\":\"contacts_number__17XBp\",\"button\":\"contacts_button__2AQTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__ySgjp\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\n\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const filterChange = createAction('contacts/filterChange');\r\n\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  // addContactRequest,\r\n  addContactSuccess,\r\n  // addContactError,\r\n  filterChange,\r\n  deleteContact,\r\n} from './phonebook-actions.js';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    // const normalizedName = payload.name.toLowerCase();\r\n    // if (state.find(contact => contact.name.toLowerCase() === normalizedName)) {\r\n    //   alert(`${payload.name} is already in contacts`);\r\n    //   return;\r\n    // }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nimport phoneReducer from './phonebook/phonebook-reducer.js';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: phoneReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  // filterChange,\r\n  // deleteContact,\r\n} from './phonebook-actions.js';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(err => dispatch(addContactError(err)));\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  addContact,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './form.module.css';\r\n\r\nimport ContactOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const number = this.state.number;\r\n    const name = this.state.name;\r\n    this.props.onSubmit(name, number);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.input}>\r\n          Name\r\n          <input\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.input}>\r\n          Number\r\n          <input\r\n            value={this.state.number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(ContactOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styles from './contacts.module.css';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst phoneFormatter = require('phone-formatter');\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li className={styles.contactItem} key={contact.id}>\r\n          {contact.name}:\r\n          <span className={styles.number}>\r\n            {phoneFormatter.format(contact.number, 'NNN-NN-NN')}\r\n          </span>\r\n          <button\r\n            className={styles.button}\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state.phonebook;\r\n  const filteredContacts = getFilteredContacts(contacts, filter);\r\n\r\n  return { contacts: filteredContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styles from './filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\nconst mapStateToProps = state => {\r\n  return { value: state.phonebook.filter };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.filterChange(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\nimport './common.css';\n\nconst App = () => (\n  <div className=\"containerApp\">\n    <h1>Phonebook</h1>\n    <Form />\n    <h2>Contacts</h2>\n    <Filter />\n    <Contacts />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__36URg\",\"input\":\"form_input__1fbpu\",\"button\":\"form_button__29U4I\"};"],"sourceRoot":""}